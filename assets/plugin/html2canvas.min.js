/*! html2canvas (lite) — foreignObject rasterizer. Public API: window.html2canvas(el,{scale}) → Promise<HTMLCanvasElement> */
!(function () {
    "use strict";
    function e(e, t) {
        return new Promise(function (n, o) {
            try {
                var r = e && e.getBoundingClientRect ? e.getBoundingClientRect() : { width: 800, height: 450 },
                    i = Math.max(
                        1,
                        Math.floor((t && t.scale) || ("undefined" != typeof devicePixelRatio ? devicePixelRatio : 1))
                    ),
                    a = Math.ceil(r.width) || 800,
                    d = Math.ceil(r.height) || 450,
                    l = new XMLSerializer().serializeToString(e),
                    c =
                        "<svg xmlns='http://www.w3.org/2000/svg' width='" +
                        a +
                        "' height='" +
                        d +
                        "' viewBox='0 0 " +
                        a +
                        " " +
                        d +
                        "'><foreignObject x='0' y='0' width='100%' height='100%'>" +
                        l +
                        "</foreignObject></svg>",
                    s = new Blob([c], { type: "image/svg+xml" }),
                    u = URL.createObjectURL(s),
                    f = new Image();
                (f.decoding = "async"),
                    (f.onload = function () {
                        try {
                            var e = document.createElement("canvas");
                            (e.width = a * i), (e.height = d * i);
                            var t = e.getContext("2d");
                            (t.imageSmoothingQuality = "high"),
                                t.drawImage(f, 0, 0, e.width, e.height),
                                URL.revokeObjectURL(u),
                                n(e);
                        } catch (e) {
                            o(e);
                        }
                    }),
                    (f.onerror = function (e) {
                        o(e);
                    }),
                    (f.src = u);
            } catch (e) {
                o(e);
            }
        });
    }
    "undefined" != typeof window && (window.html2canvas = e);
})();
